#!/usr/bin/env node

var program = require('commander');
var BitcoinRPC = require('bitcore/RpcClient').class();
var coinUtil = require('bitcore/util/util');

var PROGRAM_VERSION = '0.1';


var dfltPort       =  process.env.BITCOIND_PORT || 18332;
var dfltHost       =  process.env.BITCOIND_HOST || 'localhost';
var dfltUser       =  process.env.BITCOIND_USER || 'user';
var dfltPass       =  process.env.BITCOIND_PASS || 'pass';

program.on('--help', function(){
    console.log('  Default values are also read from BITCOIND_PORT, BITCOIND_HOST, BITCOIND_USER, BITCOIND_PASS environment variables.');
});


program
	.version(PROGRAM_VERSION)
	.option('--rpchost [host]', 'Bitcoind RPC host [localhost]', Number, dfltHost)
	.option('--rpcport [port]', 'Bitcoind RPC port [18332]', Number, dfltPort)
	.option('--rpcuser [user]', 'Bitcoind RPC user [user]', String, dfltUser)
	.option('--rpcpass [password]', 'Bitcoind RPC password [pass]', String, dfltPass)
	.parse(process.argv);

var rpc = new BitcoinRPC({
        'host' : program.rpchost,
		'port' : program.rpcport,
		'user' : program.rpcuser,
		'pass' : program.rpcpass,
		'protocol' : 'http'
});

var unspent_coins = undefined;

function get_unspent()
{
	console.log("Download list of unspent coins...");
	rpc.listUnspent(unspent_cb);
}

function unspent_cb(err, resp)
{
	if (err) throw new Error(err['message']);
	unspent_coins = resp['result'];

	filter_unspent();
}

function filter_unspent()
{
	var tmp = [];
	for (var i = 0; i < unspent_coins.length; i++) {
		var obj = unspent_coins[i];
		var decimal = obj.amount.toString();
		var bn = coinUtil.parseValue(decimal);

		// filter out everything above 10.0 BTC
		if (bn.gt(1000000000))
			continue;

		obj.amount = bn.toString();
		tmp.push(obj);
	}

	unspent_coins = tmp;

	console.dir(unspent_coins);
}

function main()
{
	get_unspent();
}

main();

